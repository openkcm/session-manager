application:
    name: session-manager
    environment: development

audit:
    endpoint: http://localhost:4043/logs
    additionalProperties: |
        appID: "session-manager"

http:
    address: :9092

grpc:
    address: :9091

status:
    enabled: true
    address: :8888
    profiling: true

logger:
    level: info # one of: debug, info, warn, error
    # Format of the logs
    format: json # one of: json, text
    formatter:
        time:
            type: unix # one of: pattern, unix
            # Used only when the property type: pattern
            # Should follow golang time pattern
            # Default value time.RFC3339.
            pattern: "Mon Jan 02 15:04:05 -0700 2006"
            # Used only when the property type: unix
            # Time units are "1ns", "1us" (or "1Âµs"), "1ms", "1s"
            # Default value 1s.
            precision: 1us
        fields:
            # Field names (this way the field name can be changed) to be used on log records; These are their defaults.
            error: "error"
            message: "msg"
            level: "level"
            time: "time"
            # Fields names used by OTEL to track the Trace and Span ID
            otel:
                traceId: "traceId" # Default is TraceID
                spanId: "spanId" # Default is SpanID
            masking:
                # All fields under PII, the formatters will mask the value and keeping first 4 original characters
                pii:
                    - email
                    - ip-address
                # All fields under other, the formatters will mask the value, using given mask.
                other:
                    jwt-token: "*****"

telemetry:
    logs:
        enabled: false
        protocol: grpc
        host:
            source: file
            file:
                path: /etc/credentials/sap-cloud-logging.json
                format: json
                jsonPath: "$.ingest-otlp-endpoint"
        #url: "/v1/logs"
        secretRef:
            type: mtls # insecure, mtls, api-token
            mtls:
                cert:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.ingest-otlp-cert"
                certKey:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.ingest-otlp-key"
                serverCa:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.server-ca"

    traces:
        enabled: false
        #protocol: http
        #host:
        #  source: embedded
        #  value: live.eu30.apm.services.cloud.sap
        #url:
        #  source: embedded
        #  value: /e/98373022-4039-442d-8646-0b69d207eee8/api/v2/otlp/v1/traces
        #secretRef:
        #  type: api-token # insecure, mtls, api-token
        #  apiToken:
        #    source: embedded
        #    value: "dt0c01.3X64SRHJVCJ43KRTPPJZYG5M.....5U6FZWJRMM6L2FJZFNZWM5EN2LRKWYUQLWLME"

        protocol: grpc
        host:
            source: file
            file:
                path: /etc/credentials/sap-cloud-logging.json
                format: json
                jsonPath: "$.ingest-otlp-endpoint"
        #url: "/v1/traces"
        secretRef:
            type: mtls # insecure, mtls, api-token
            mtls:
                cert:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.ingest-otlp-cert"
                certKey:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.ingest-otlp-key"
                serverCa:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.server-ca"
    metrics:
        enabled: false
        prometheus:
            enabled: false

        #protocol: http
        #host:
        #  source: embedded
        #  value: live.eu30.apm.services.cloud.sap
        #url:
        #  source: embedded
        #  value: /e/98373022-4039-442d-8646-0b69d207eee8/api/v2/otlp/v1/metrics
        #secretRef:
        #  type: api-token # insecure, mtls, api-token
        #  apiToken:
        #    source: embedded
        #    value: "dt0c01.3X64SRHJVCJ43KRTPPJZYG5M.TOCDC...5U6FZWJRMM6L2FJZFNZWM5EN2LRKWYUQLWLME"

        protocol: grpc
        host:
            source: file
            file:
                path: /etc/credentials/sap-cloud-logging.json
                format: json
                jsonPath: "$.ingest-otlp-endpoint"
        #url: "/v1/metrics"
        secretRef:
            type: mtls # insecure, mtls, api-token
            mtls:
                cert:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.ingest-otlp-cert"
                certKey:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.ingest-otlp-key"
                serverCa:
                    source: file
                    file:
                        path: /etc/credentials/sap-cloud-logging.json
                        format: json
                        jsonPath: "$.server-ca"

database:
    name: session_manager
    port: 5432
    host:
        source: embedded
        value: localhost
    user:
        source: embedded
        value: postgres
    password:
        source: embedded
        value: secret

valkey:
    host:
        source: embedded
        value: localhost:6379
    user:
        source: embedded
        value: ""
    password:
        source: embedded
        value: secret
    prefix: session-manager
    secretRef:
        type: insecure # Supports "mtls" or "insecure"
        # mtls:
        #     cert:
        #         source: embedded
        #         value: value
        #     certKey:
        #         source: embedded
        #         value: value
        #     serverCa:
        #         source: embedded
        #         value: value

sessionManager:
    sessionDuration: 12h
    redirectURI: http://localhost:9092/callback
    clientID:
        source: embedded
        value: my-client-id
    csrfSecret:
        source: embedded
        value: my-csrf-secret-at-least-thirty-two-bits-size
    jwsSigAlgs:
        - RS256
        - HS256

migrate:
    source: file://./sql

tokenRefresher:
    refreshInterval: 30m
